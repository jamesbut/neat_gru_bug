// aiTools is a free C++ library of AI tools.
// Copyright (C) 2013  Benjamin Schnieders

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program, see file LICENCE.txt.
// Alternativley, see <http://www.gnu.org/licenses/>.

#ifndef __AITOOLS_GEOMETRY_H_INCLUDED
#define __AITOOLS_GEOMETRY_H_INCLUDED

#include <Util/Functors.h>
#include <Util/RestrictedValue.h>

namespace aiTools
{
	namespace Math
	{
		//embracing the EKI One tradition of providing PI with a ridicilously high precision
		static const double PI =  3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679;
		static const double TWO_PI = PI * 2;

		typedef RestrictedValue<IntervalRestriction<MinusPiToPi<double>, WrapAround> > Angle;

		template <typename T>
		LinearTransformation<T> transformBetweenRanges(const Range<T>& input, const Range<T>& output)
		{
			T slope = (output.upper-output.lower) / (input.upper-input.lower);
			T offset = output.lower - (slope*input.lower);

			return LinearTransformation<T>(slope, offset);
		}
	}
}

#endif //__AITOOLS_GEOMETRY_H_INCLUDED
