// aiTools is a free C++ library of AI tools.
// Copyright (C) 2013 - 2015  Benjamin Schnieders

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program, see file LICENCE.txt.
// Alternativley, see <http://www.gnu.org/licenses/>.

#include <algorithm>
#include <vector>

#ifndef __AITOOLS_RANDOMIZED_FOREACH_H__INCLUDED
#define __AITOOLS_RANDOMIZED_FOREACH_H__INCLUDED
namespace aiTools
{
	template <typename InputIterator, typename Action, typename RandomNumberGenerator>
	Action randomized_for_each(InputIterator first, InputIterator last, Action action, RandomNumberGenerator& gen)
	{
		std::vector<InputIterator> iterators;
		for(InputIterator iter = first;iter != last; ++iter)
			iterators.emplace_back(iter);

		std::random_shuffle(iterators.begin(), iterators.end(), gen);

		std::for_each(iterators.begin(), iterators.end(),
				[&action](const auto& elem)
				{
					action(*elem);
				}
			);

		return action;
	}

	template <typename InputIterator, typename Action>
	Action randomized_for_each(InputIterator first, InputIterator last, Action action)
	{
		std::vector<InputIterator> iterators;
		for(InputIterator iter = first;iter != last; ++iter)
			iterators.emplace_back(iter);

		std::random_shuffle(iterators.begin(), iterators.end());

		std::for_each(iterators.begin(), iterators.end(),
				[&action](const auto& elem)
				{
					action(*elem);
				}
			);

		return action;
	}
}

#endif // __AITOOLS_RANDOMIZED_FOREACH_H__INCLUDED
